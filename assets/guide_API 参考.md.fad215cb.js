import{_ as e,o as t,c as a,a as n}from"./app.3c2646bb.js";const b=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[{"level":2,"title":"useData","slug":"usedata","link":"#usedata","children":[]},{"level":2,"title":"useRoute","slug":"useroute","link":"#useroute","children":[]},{"level":2,"title":"useRouter","slug":"userouter","link":"#userouter","children":[]},{"level":2,"title":"withBase","slug":"withbase","link":"#withbase","children":[]},{"level":2,"title":"<Content />","slug":"content","link":"#content","children":[]},{"level":2,"title":"<ClientOnly />","slug":"clientonly","link":"#clientonly","children":[]},{"level":2,"title":"<OutboundLink />","slug":"outboundlink","link":"#outboundlink","children":[]}],"relativePath":"guide/API 参考.md","lastUpdated":1673091302000}'),i={name:"guide/API 参考.md"},d=n('<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h1><h2 id="usedata" tabindex="-1">useData <a class="header-anchor" href="#usedata" aria-hidden="true">#</a></h2><p>返回特定于页面的数据</p><h2 id="useroute" tabindex="-1">useRoute <a class="header-anchor" href="#useroute" aria-hidden="true">#</a></h2><p>返回当前路由对象</p><h2 id="userouter" tabindex="-1">useRouter <a class="header-anchor" href="#userouter" aria-hidden="true">#</a></h2><p>返回 VitePress 路由器实例，以便您可以以编程方式导航到另一个页面。</p><h2 id="withbase" tabindex="-1">withBase <a class="header-anchor" href="#withbase" aria-hidden="true">#</a></h2><p>类型：(path: string) =&gt; string 将配置附加base到给定的 URL 路径。另请参阅基本 URL</p><h2 id="content" tabindex="-1"><code>&lt;Content /&gt;</code> <a class="header-anchor" href="#content" aria-hidden="true">#</a></h2><p>该<code>&lt;Content /&gt;</code>组件显示呈现的markdown内容。在创建自己的主题时很有用。</p><h2 id="clientonly" tabindex="-1"><code>&lt;ClientOnly /&gt;</code> <a class="header-anchor" href="#clientonly" aria-hidden="true">#</a></h2><p>该<code>&lt;ClientOnly /&gt;</code>组件仅在客户端呈现其插槽。</p><p>由于 VitePress 应用程序在生成静态构建时在 Node.js 中进行服务器渲染，因此任何 Vue 使用都必须符合通用代码要求。简而言之，确保只在 beforeMount 或mounted 钩子中访问浏览器/DOM API。</p><p>如果您正在使用或演示对 SSR 不友好的组件（例如，包含自定义指令），您可以将它们包装在ClientOnly组件内。</p><h2 id="outboundlink" tabindex="-1"><code>&lt;OutboundLink /&gt;</code> <a class="header-anchor" href="#outboundlink" aria-hidden="true">#</a></h2>',16),r=[d];function l(o,s,h,u,c,p){return t(),a("div",null,r)}const g=e(i,[["render",l]]);export{b as __pageData,g as default};
