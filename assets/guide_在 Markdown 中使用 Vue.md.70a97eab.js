import{_ as p,o as a,c as e,F as n,d as s,r as c,b as i,e as l,a as d,t as u}from"./app.3c2646bb.js";const h={},_=s("span",null,"在 Markdown 中导入组件",-1),D=s("span",null,"⚡",-1);function y(t,r){return a(),e(n,null,[_,D],64)}const F=p(h,[["render",y]]),m=s("p",null,"[toc]",-1),v=s("h2",{id:"在-markdown-中使用-vue指令v-for",tabindex:"-1"},[l("在 Markdown 中使用 Vue指令v-for "),s("a",{class:"header-anchor",href:"#在-markdown-中使用-vue指令v-for","aria-hidden":"true"},"#")],-1),k=s("div",null,[s("p",null,[s("code",null,'<p v-for="i in 3">{{ i }}</p>')])],-1),b=d(`<h2 id="在块中将数据公开到页面" tabindex="-1">在块中将数据公开到页面 <a class="header-anchor" href="#在块中将数据公开到页面" aria-hidden="true">#</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">import </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> useData </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> from &#39;vitepress&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">const </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> page </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> = useData()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">pre</span><span style="color:#89DDFF;">&gt;{{</span><span style="color:#A6ACCD;"> page </span><span style="color:#89DDFF;">}}&lt;/</span><span style="color:#F07178;">pre</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="输出原始代码" tabindex="-1">输出原始代码 <a class="header-anchor" href="#输出原始代码" aria-hidden="true">#</a></h2><div><p><code>{{ This will be displayed as-is }}</code></p></div><h2 id="在-markdown-中导入组件" tabindex="-1">在 Markdown 中导入组件 <a class="header-anchor" href="#在-markdown-中导入组件" aria-hidden="true">#</a></h2>`,5),f=s("h2",{id:"内联style写样式",tabindex:"-1"},[l("内联style写样式 "),s("a",{class:"header-anchor",href:"#内联style写样式","aria-hidden":"true"},"#")],-1),g=s("p",{style:{color:"orange"}}," 我是内联style写的样式 ",-1),x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"在 Markdown 中使用 Vue指令v-for","slug":"在-markdown-中使用-vue指令v-for","link":"#在-markdown-中使用-vue指令v-for","children":[]},{"level":2,"title":"在块中将数据公开到页面","slug":"在块中将数据公开到页面","link":"#在块中将数据公开到页面","children":[]},{"level":2,"title":"输出原始代码","slug":"输出原始代码","link":"#输出原始代码","children":[]},{"level":2,"title":"在 Markdown 中导入组件","slug":"在-markdown-中导入组件","link":"#在-markdown-中导入组件","children":[]},{"level":2,"title":"内联style写样式","slug":"内联style写样式","link":"#内联style写样式","children":[]}],"relativePath":"guide/在 Markdown 中使用 Vue.md","lastUpdated":1673091302000}'),C={name:"guide/在 Markdown 中使用 Vue.md"},V=Object.assign(C,{setup(t){return(r,A)=>(a(),e("div",null,[m,v,k,(a(),e(n,null,c(3,o=>s("p",null,u(o),1)),64)),b,s("p",null,[i(F)]),f,g]))}});export{x as __pageData,V as default};
